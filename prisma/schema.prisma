// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id             String     @id @unique @default(uuid())
  email          String     @unique
  password       String
  mentorId       Mentor?    @relation(fields: [mentorUsername], references: [username])
  mentorUsername String?    @unique
  name           String
  Review         Review[]
  Schedule       Schedule[]
}

model Mentor {
  username   String       @id @unique @default(uuid())
  linkedin   String?
  bio        String?
  Category   Category[]
  Review     Review[]
  User       User?
  Experience Experience[]
  Schedule   Schedule[]
}

model Category {
  id         Int      @id @default(autoincrement())
  discipline String
  expertise  String   @unique
  Mentor     Mentor[]
}

model Experience {
  id             Int       @id @default(autoincrement())
  mentor         Mentor?   @relation(fields: [mentorUsername], references: [username])
  mentorUsername String?
  company        String?
  position       String?
  startDate      DateTime? @default(now())
  endDate        DateTime? @default(now())
}

model Schedule {
  startDate      DateTime? @default(now())
  endDate        DateTime? @default(now())
  topic          String?
  user           User      @relation(fields: [userId], references: [id])
  userId         String
  mentor         Mentor    @relation(fields: [mentorUsername], references: [username])
  mentorUsername String

  @@id([userId, mentorUsername])
}

model Review {
  messsage       String
  reviewer       User   @relation(fields: [reviewerId], references: [id])
  reviewerId     String
  mentor         Mentor @relation(fields: [mentorUsername], references: [username])
  mentorUsername String

  @@id([reviewerId, mentorUsername])
}
